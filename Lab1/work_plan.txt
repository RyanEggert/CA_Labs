The ALU is highly modular. Additionally, the operations we will implement for Lab1 may be easily grouped into groups of similar/closely related modules. There appears to be a logical way to divide the work amongst three workers. 

ADD, SUB, SLT: These three modules are closely related. The ADD operation should be similar to Lab0's four bit adder (here 32-bit instead.) By the properties of addition in two's complement representation, the SUB operation should be the same as the ADD operation with the added step of converting one input to it's (negative) two's complement representation first. The SLT operation may be done simply by having giving the SUB operation an extra output (a boolean flag for whether or not the sum is less than zero). If this flag is true (i.e. if A-B < 0), then B > A, output = 0, and likely vice-versa. Meg will do this. This should take 4 hours and be done by 5pm Monday/Tuesday.

XOR, AND, NAND, NOR, OR: All of the bitwise logical operations should share essentially the same structure, but with different base gates. To reduce the number of gates, the NAND operation, for example, should be the negation of the output of the AND module. Shane will do this. This should take 4 hours and be done by 5pm Monday/Tuesday.

ALU Control Logic/Testbenches: Each individual operation should have it's own testbench--this will aid parallel, modular development. The ALU logical core should also have a testbench to verify that the command inputs choose the correct input. The testbenches must be completed soon and distributed to the other two team-members so they may be used to completely test their operations. Ryan will write the operator testbenches and have them written and pushed by Saturday morning. This should take four hours. He will then work on the cental ALU control logic and have this ready by Tuesday morning. This step should take two hours. If development of the ALU logic can be accelerated or taken on by an operations developer who's finished, it will be, as this will leave more time for integration.

Each person is responsible for conducting a timing analysis for his/her modules and documenting it in the report. Each person should also note test bench failures, the issue's resolution, and document these in the report. 